<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


       <context:property-placeholder location="classpath:db.properties" file-encoding="utf-8"/>
       <!-- 一般都将数据源独立出来，便于引用 -->
       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <property name="user" value="${jdbc.user}"></property>
              <property name="password" value="${jdbc.password}"></property>
              <property name="driverClass" value="${jdbc.driverClass}"></property>
              <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
              <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
              <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
              <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
       </bean>
       <!--将sqlsessionFactory交给spring管理-->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="typeAliasesPackage" value="com.bnsilu.entity"/>
              <property name="dataSource" ref="dataSource"></property>
              <property name="mapperLocations" value="classpath:com/bnsilu/mapper/*.xml"></property>
              <property name="configurationProperties">
                     <props>
                            <prop key="lazyLoadingEnabled">true</prop>
                            <prop key="aggressiveLazyLoading">false</prop>
                            <prop key="cacheEnabled">true</prop>
                     </props>
              </property>
              <property name="plugins">
		        <bean class="com.bnsilu.interceptor.PageInterceptor"></bean>  
    		  </property>
       </bean>

       <!-- 配置mapper自动扫描指定包，将包下的mapper生成代理对象，代理对象的名字为接口名首字母小写 -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <property name="basePackage" value="com.bnsilu.mapper"></property>
              <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
       </bean>
       <!-- 事务配置 -->
       <!-- 事务管理器 -->
       <bean id="transactionManager"
             class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource" />
       </bean>
       <!-- 事务通知、增强 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <tx:attributes>
                     <tx:method name="query*" propagation="REQUIRED" read-only="true" />
                     <tx:method name="insert*" propagation="REQUIRED"  />
                     <tx:method name="delete*" propagation="REQUIRED"  />
                     <tx:method name="update*" propagation="REQUIRED" />
              </tx:attributes>
       </tx:advice>
       <!-- 使用事务通知在那些切点方法上 -->
       <aop:config>
              <aop:pointcut
                      expression="execution(public * com.bnsilu.service.*.*(..))"
                      id="pointcut" />
              <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
       </aop:config>
</beans>